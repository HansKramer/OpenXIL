.\" @(#)xil_device_create.3 1.3 94/01/28 SMI/VPG;
.so man3/xil.macs
.TH xil_device_create 3 "31 March 1994" "" "XIL Library"
.SH NAME
xil_device_create, xil_device_destroy \- create or destroy a device object
.SH SYNOPSIS
.ft B
.nf
#include <xil/xil.h>
.fi
.sp .5v
.BI "XilDevice  xil_device_create ( XilSystemState " State ,
.if t .in +5n
.br
.BI "char *" device );
.br
.ft R
.fi
.in
.P
.sp .5v
.BI "void xil_device_destroy ( XilDevice " deviceObj );
.if t .in +5n
.br
.ft R
.fi
.in
.SH DESCRIPTION
.nh
.IX xil_device_create
.IX Functions xil_device_create
.IX "Attribute Functions" "xil_device_create"
.B xil_device_create
(\^) creates a device object and associates it with a particular device
type; the object is used to store
initialization attributes for its associated device.
.I State
is the XIL system state, and 
.I device
is the name of the associated 
device type. The device name must be provided by the group that writes
the device handler.
.P
A device object is associated with a particular device type and
cannot be associated with a different device type.  Its only use is
to initialize device attributes when you call the 
.BR xil_create_from_device (3)
function to create
the device image. Device objects are particularly useful for
storing interdependent attributes that must be simultaneously set
for a device, or for setting attributes that require a
substantial memory allocation.
.P
.IX xil_device_destroy
.IX Functions xil_device_destroy
.IX "Attribute Functions"  "xil_device_destroy"
.B xil_device_destroy
(\^) destroys the specified device object. Its only parameter is the
handle to the device object.
.SH ERRORS
.nh
For a complete list of XIL error messages by number, consult Appendix B of the 
.I "XIL Programmer's Guide."
.SH EXAMPLES
Create a device object associated with the device "my_device":
.nf
.sp
.RS
.ft 3
XilSystemState State;
XilDevice deviceObj;
.sp
deviceObj = xil_device_create (State, "my_device");
.RE
.fi
.ft 1
.SH NOTES
A device object cannot be used to adjust a device image's attributes
after the image is created;
.BR xil_set_device_attribute (3)
does that.  However, after using the device object to create
one device image, you can use the same object to store different
initialization attributes, then use the modified device object
when you create another device image of the same type.
.P
Devices that don't require attribute initialization typically don't
recognize or support device objects. For these devices, you can't
use a device object to set attributes.
.SH SEE ALSO
.BR xil_device_set_value (3),
.BR xil_create_from_device (3),
.BR xil_set_device_attribute (3).
